@page
@model Library.Pages.Orders.CartModel
@{
    double total = 0;
    ViewData["Title"] = "Cart";
}
<style>
    a:hover {
        text-decoration: none
    }
</style>

<section class="tg-sectionspace tg-haslayout">
    <div class="container">
        <div class="row">
            <div class="tg-newrelease">
                <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                    <div class="tg-sectionhead">
                        <h2>Giỏ hàng</h2>
                    </div>

                    @foreach (var item in Model.Carts)
                    {
                        <div class="row">
                            <div class="tg-newreleasebooks">
                                <div class="col-xs-4 col-sm-4 col-md-6 col-lg-4">
                                    <div class="tg-postbook">
                                        <figure class="tg-featureimg">
                                            <div class="tg-bookimg">
                                                <div class="tg-frontcover"><img src="@item.Book.Image" alt="image description"></div>
                                                <div class="tg-backcover"><img src="@item.Book.Image" alt="image description"></div>
                                            </div>
                                        </figure>
                                        <div class="tg-postbookcontent">
                                            <ul class="tg-bookscategories">
                                                <li><a href="#">@item.Book.Category.CategoryName</a></li>
                                            </ul>
                                            <div class="tg-booktitle">
                                                <h3><a href="#">@item.Book.Title</a></h3>
                                            </div>
                                            <span class="tg-bookwriter">Giá: <a href="#">@string.Format(System.Globalization.CultureInfo.GetCultureInfo("vi-VN"), "{0:C}", item.Book.Price)</a></span>

                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-4 col-sm-4 col-md-6 col-lg-4">
                                    <div>
                                        <button class="tg-btn btnMinusQuantity" style="padding: 0 10px;" data-target="@item.CartId">-</button>
                                        <a class="tg-btn" style="padding: 0 10px;">@item.Quantity</a>
                                        <button class="tg-btn btnAddQuantity" style="padding: 0 10px;" data-target="@item.CartId">+</button>
                                    </div>
                                </div>
                                <div class="col-xs-4 col-sm-4 col-md-6 col-lg-4">
                                    <div class="tg-postbook">
                                        ₫ @item.Book.Price.Value.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) <a asp-page="/Orders/Cart" asp-page-handler="DeleteCart" asp-route-cartId="@item.CartId" class="close">&#10005;</a>
                                        @{
                                            total += item.Book.Price.Value * item.Quantity;
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr>
                    }
                </div>
                <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                    <div class="tg-sectionhead">
                        <h2>Tổng quan</h2>
                    </div>
                    <div class="row mb-3">
                        <div class="col" id="countitemright">Sản phẩm: @Model.Carts.Count</div>
                        <div class="col text-right" id="itemprice">₫ @total.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</div>
                    </div>
                    <form method="POST">
                        <div>
                            <p>Vận chuyển</p>
                            <select class="w-100 p-2 mb-3" id="select-option" onchange="updateValue()">
                                <option class="text-muted" value="20000">Giao hàng tiết kiệm - 20,000 ₫</option>
                                <option class="text-muted" value="30000">Giao hàng nhanh - 30,000 ₫</option>
                            </select>
                        </div>
                        <div>
                            <p>Địa chỉ</p>
                            <input required type="text" asp-for="Address" placeholder="Nhập địa chỉ của bạn">
                        </div>
                        <hr>
                        <div class="row" style="padding: 2vh 0;">
                            <div class="col fw-bolder">TỔNG TIỀN</div>
                            <div id="total" class="col text-right fw-bolder">₫;</div>
                            <input type="hidden" id="totalhidden" asp-for="Total" value="" />
                        </div>
                        <button class="tg-btn tg-active">Thanh toán</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let totalElement = document.getElementById("total");
        let itemPrice = parseFloat(document.getElementById("itemprice").textContent.split(' ')[1].replace('.', '').replace(',', '.'));
        let totalHidden = document.getElementById("totalhidden");

        function updateTotal() {
            let shippingCost = parseFloat(document.getElementById("select-option").value);
            let finalTotal = (itemPrice + shippingCost).toFixed(0);
            totalElement.textContent = `₫ ${finalTotal.replace(/\B(?=(\d{3})+(?!\d))/g, ".")}`;
            totalHidden.value = finalTotal;
        }

        updateTotal(); // Initial call to set the total price

        document.getElementById("select-option").addEventListener("change", updateTotal);

        document.querySelectorAll('.btnAddQuantity, .btnMinusQuantity').forEach(button => {
            button.addEventListener('click', function (e) {
                e.preventDefault();
                let targetId = this.dataset.target;
                let isAdd = this.classList.contains('btnAddQuantity');
                let url = `/Orders/Cart?handler=${isAdd ? 'AddQuantity' : 'MinusQuantity'}&cartId=${targetId}`;
                fetch(url, {
                    method: 'GET',
                    headers: { 'Content-Type': 'application/json' }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data) {
                            let quantityElement = this.parentElement.querySelector('.tg-btn:nth-child(2)');
                            quantityElement.textContent = data.quantity;
                            itemPrice = isAdd ? itemPrice + data.book.price : itemPrice - data.book.price;
                            document.getElementById("itemprice").textContent = `₫ ${itemPrice.toFixed(0).replace(/\B(?=(\d{3})+(?!\d))/g, ".")}`;
                            updateTotal();
                        } else {
                            console.error('No data available.');
                        }
                    })
                    .catch(error => {
                        console.error('Error occurred while updating quantity.', error);
                    });
            });
        });
    });
</script>
